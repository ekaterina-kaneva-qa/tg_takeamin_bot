import telebot
from telebot import types
from threading import Thread
from time import sleep
import schedule
from datetime import datetime
import pytz
import random

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = '—Ç–≤–æ–π_—Ç–æ–∫–µ–Ω'

# --- —Ñ—Ä–∞–∑—ã ---
pause_tips = [
    "–°–¥–µ–ª–∞–π –ø–∞—Ä—É –≥–ª—É–±–æ–∫–∏—Ö –≤–¥–æ—Ö–æ–≤ üí®",
    "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ. –î–∞, –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ ‚òÅÔ∏è",
    "–ó–∞–∫—Ä–æ–π –≥–ª–∞–∑–∞ –Ω–∞ –º–∏–Ω—É—Ç—É –∏ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–π üßò",
]

stretch_tips = [
    "–ü–æ—Ç—è–Ω–∏ –ø–ª–µ—á–∏ –Ω–∞–∑–∞–¥ –∏ –≤–≤–µ—Ä—Ö üí™",
    "–ü—Ä–æ–π–¥–∏ –¥–æ –∫—É—Ö–Ω–∏ –∏ –æ–±—Ä–∞—Ç–Ω–æ (–±–µ–∑ –∫–æ—Ñ–µ!) üö∂",
    "–°–¥–µ–ª–∞–π –ø–∞—Ä—É –Ω–∞–∫–ª–æ–Ω–æ–≤ –∏–ª–∏ –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π üèÉ",
]

reminders = [
    "–ù–µ–±–æ–ª—å—à–æ–π –ø–µ—Ä–µ—Ä—ã–≤ = –±–æ–ª—å—à–µ —Ñ–æ–∫—É—Å–∞ üí°",
    "–ü–æ—Ä–∞ –≤—Å—Ç–∞—Ç—å, —Ä–∞–∑–º—è—Ç—å—Å—è, –∞ –ø–æ—Ç–æ–º –≤–µ—Ä–Ω—É—Ç—å—Å—è üîÑ",
    "–¢—ã –º–æ–ª–æ–¥–µ—Ü. –ê —Ç–µ–ø–µ—Ä—å —Å–¥–µ–ª–∞–π –ø–∞—É–∑—É ‚òï",
]

# --- –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
bot = telebot.TeleBot(TOKEN)
active_users = set()

# === –û–ë–†–ê–ë–û–¢–ö–ê –ö–û–ú–ê–ù–î –ò –ö–ù–û–ü–û–ö ===
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('üßò –û—Ç–¥–æ—Ö–Ω—É—Ç—å', 'üö∂ –†–∞–∑–º—è—Ç—å—Å—è')
    markup.add('üîÅ –•–æ—á—É –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è', '‚ùå –•–≤–∞—Ç–∏—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π')
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –¥–µ–ª–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –ø–µ—Ä–µ—Ä—ã–≤—ã üòä', reply_markup=markup)

@bot.message_handler(func=lambda msg: True)
def handle_button(message):
    user_id = message.from_user.id
    text = message.text.strip()

    if text == 'üßò –û—Ç–¥–æ—Ö–Ω—É—Ç—å':
        bot.send_message(user_id, random.choice(pause_tips))

    elif text == 'üö∂ –†–∞–∑–º—è—Ç—å—Å—è':
        bot.send_message(user_id, random.choice(stretch_tips))

    elif text == 'üîÅ –•–æ—á—É –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è':
        active_users.add(user_id)
        bot.send_message(user_id, '–ë—É–¥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å —Ç–µ–±–µ –¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ—Ä—ã–≤—ã —Å 10 –¥–æ 18 (–ú–°–ö) –∫–∞–∂–¥—ã–π —á–∞—Å ‚è∞')

    elif text == '‚ùå –•–≤–∞—Ç–∏—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π':
        if user_id in active_users:
            active_users.remove(user_id)
            bot.send_message(user_id, '–•–æ—Ä–æ—à–æ, –Ω–µ –±—É–¥—É –±–æ–ª—å—à–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å üôÉ')
        else:
            bot.send_message(user_id, '–£ —Ç–µ–±—è –∏ –Ω–µ –±—ã–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è ü§î')

    else:
        bot.send_message(user_id, '–Ø –ø–æ–∫–∞ –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∏ üôà –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–∏–º–∞–π –Ω–∞ –Ω–∏—Ö –Ω–∏–∂–µ üëá')

# === –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –†–ê–°–°–´–õ–ö–ê ===
def send_reminders():
    now = datetime.now(pytz.timezone('Europe/Moscow'))
    if 10 <= now.hour <= 18:
        for user_id in active_users:
            try:
                bot.send_message(user_id, random.choice(reminders))
            except:
                pass  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞ ‚Äî –Ω–µ –ø–∞–¥–∞–µ–º

schedule.every().hour.at(":00").do(send_reminders)

def schedule_worker():
    while True:
        schedule.run_pending()
        sleep(30)

# === –ó–ê–ü–£–°–ö ===
if __name__ == '__main__':
    Thread(target=schedule_worker).start()
    bot.infinity_polling()
